self.size_embed = 40,  self.state_size = 15, batch_size=32, learn_rate=1e-3, self.cell_type = 'rnn', no fc, no dropout

[Executed at: Wed Apr 17 20:38:09 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-17 20:35:58.884893: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
../resource/scripts/submit.sh: line 13: 5195 Done echo "$train_test_text"
5196 Killed | STARTER=starter3 DATASET_FILE=italian.npz DATASET_DIR=$ASNLIB python3 2>&1 >> results.txt
2019-04-17 20:37:17.692186: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.030459
iteration (0)/(222): train batch loss = 3.614, train batch accuracy = 0.019, train acc
iteration (50)/(222): train batch loss = 3.186, train batch accuracy = 0.233, train acc
iteration (100)/(222): train batch loss = 2.920, train batch accuracy = 0.242, train acc
iteration (150)/(222): train batch loss = 2.658, train batch accuracy = 0.272, train acc
iteration (200)/(222): train batch loss = 2.534, train batch accuracy = 0.339, train acc
Test accuracy for japanese after 1 iterations is 0.502306
iteration (0)/(222): train batch loss = 2.543, train batch accuracy = 0.408, train acc
iteration (50)/(222): train batch loss = 2.342, train batch accuracy = 0.687, train acc
iteration (100)/(222): train batch loss = 2.295, train batch accuracy = 0.653, train acc
iteration (150)/(222): train batch loss = 2.206, train batch accuracy = 0.720, train acc
iteration (200)/(222): train batch loss = 2.210, train batch accuracy = 0.687, train acc
Test accuracy for japanese after 2 iterations is 0.773475
iteration (0)/(222): train batch loss = 2.220, train batch accuracy = 0.662, train acc
iteration (50)/(222): train batch loss = 2.104, train batch accuracy = 0.742, train acc
iteration (100)/(222): train batch loss = 2.105, train batch accuracy = 0.716, train acc
iteration (150)/(222): train batch loss = 2.050, train batch accuracy = 0.782, train acc
iteration (200)/(222): train batch loss = 2.066, train batch accuracy = 0.740, train acc
Test accuracy for japanese after 3 iterations is 0.814463
iteration (0)/(222): train batch loss = 2.082, train batch accuracy = 0.725, train acc
iteration (50)/(222): train batch loss = 2.003, train batch accuracy = 0.774, train acc
iteration (100)/(222): train batch loss = 2.010, train batch accuracy = 0.751, train acc
iteration (150)/(222): train batch loss = 1.973, train batch accuracy = 0.821, train acc
iteration (200)/(222): train batch loss = 2.002, train batch accuracy = 0.769, train acc
Test accuracy for japanese after 4 iterations is 0.839962
iteration (0)/(222): train batch loss = 2.013, train batch accuracy = 0.748, train acc
iteration (50)/(222): train batch loss = 1.950, train batch accuracy = 0.811, train acc
iteration (100)/(222): train batch loss = 1.958, train batch accuracy = 0.786, train acc
iteration (150)/(222): train batch loss = 1.935, train batch accuracy = 0.843, train acc
iteration (200)/(222): train batch loss = 1.962, train batch accuracy = 0.815, train acc
Test accuracy for japanese after 5 iterations is 0.869637
iteration (0)/(222): train batch loss = 1.965, train batch accuracy = 0.787, train acc
iteration (50)/(222): train batch loss = 1.914, train batch accuracy = 0.853, train acc
iteration (100)/(222): train batch loss = 1.920, train batch accuracy = 0.829, train acc
iteration (150)/(222): train batch loss = 1.905, train batch accuracy = 0.863, train acc
iteration (200)/(222): train batch loss = 1.924, train batch accuracy = 0.840, train acc
Test accuracy for japanese after 6 iterations is 0.886172
iteration (0)/(222): train batch loss = 1.929, train batch accuracy = 0.818, train acc
iteration (50)/(222): train batch loss = 1.886, train batch accuracy = 0.869, train acc
iteration (100)/(222): train batch loss = 1.890, train batch accuracy = 0.852, train acc
iteration (150)/(222): train batch loss = 1.885, train batch accuracy = 0.871, train acc
iteration (200)/(222): train batch loss = 1.903, train batch accuracy = 0.856, train acc
Test accuracy for japanese after 7 iterations is 0.899138
iteration (0)/(222): train batch loss = 1.904, train batch accuracy = 0.844, train acc
iteration (50)/(222): train batch loss = 1.868, train batch accuracy = 0.885, train acc
iteration (100)/(222): train batch loss = 1.871, train batch accuracy = 0.871, train acc
iteration (150)/(222): train batch loss = 1.873, train batch accuracy = 0.875, train acc
iteration (200)/(222): train batch loss = 1.888, train batch accuracy = 0.872, train acc
Test accuracy for japanese after 8 iterations is 0.908711
iteration (0)/(222): train batch loss = 1.889, train batch accuracy = 0.868, train acc
iteration (50)/(222): train batch loss = 1.856, train batch accuracy = 0.903, train acc
iteration (100)/(222): train batch loss = 1.858, train batch accuracy = 0.890, train acc
iteration (150)/(222): train batch loss = 1.864, train batch accuracy = 0.895, train acc
iteration (200)/(222): train batch loss = 1.880, train batch accuracy = 0.882, train acc
Test accuracy for japanese after 9 iterations is 0.915064
iteration (0)/(222): train batch loss = 1.879, train batch accuracy = 0.886, train acc
iteration (50)/(222): train batch loss = 1.846, train batch accuracy = 0.925, train acc
iteration (100)/(222): train batch loss = 1.850, train batch accuracy = 0.907, train acc
iteration (150)/(222): train batch loss = 1.857, train batch accuracy = 0.913, train acc
iteration (200)/(222): train batch loss = 1.873, train batch accuracy = 0.894, train acc
Test accuracy for japanese after 10 iterations is 0.918545
iteration (0)/(222): train batch loss = 1.871, train batch accuracy = 0.905, train acc
iteration (50)/(222): train batch loss = 1.834, train batch accuracy = 0.934, train acc
iteration (100)/(222): train batch loss = 1.845, train batch accuracy = 0.921, train acc
iteration (150)/(222): train batch loss = 1.851, train batch accuracy = 0.920, train acc
iteration (200)/(222): train batch loss = 1.868, train batch accuracy = 0.890, train acc
Test accuracy for japanese after 11 iterations is 0.921765
iteration (0)/(222): train batch loss = 1.864, train batch accuracy = 0.914, train acc
iteration (50)/(222): train batch loss = 1.829, train batch accuracy = 0.937, train acc
iteration (100)/(222): train batch loss = 1.839, train batch accuracy = 0.923, train acc
iteration (150)/(222): train batch loss = 1.845, train batch accuracy = 0.921, train acc
iteration (200)/(222): train batch loss = 1.863, train batch accuracy = 0.893, train acc
Final accuracy for japanese is 0.922461
#####################################################################################
#####################################################################################
##########################################################################################
self.size_embed = 40,  self.state_size = 15, batch_size=32, learn_rate=1e-3, self.cell_type = 'rnn', 1 epoch, no fc
[Executed at: Wed Apr 17 21:48:01 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-17 21:46:38.790103: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-17 21:47:43.117863: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for italian after 0 iterations is 0.028387
iteration (0)/(432): train batch loss = 3.689, train batch accuracy = 0.021, train acc
iteration (50)/(432): train batch loss = 3.213, train batch accuracy = 0.160, train acc
iteration (100)/(432): train batch loss = 2.983, train batch accuracy = 0.187, train acc
iteration (150)/(432): train batch loss = 2.782, train batch accuracy = 0.165, train acc
iteration (200)/(432): train batch loss = 2.590, train batch accuracy = 0.255, train acc
iteration (250)/(432): train batch loss = 2.662, train batch accuracy = 0.362, train acc
iteration (300)/(432): train batch loss = 2.384, train batch accuracy = 0.599, train acc
iteration (350)/(432): train batch loss = 2.375, train batch accuracy = 0.599, train acc
iteration (400)/(432): train batch loss = 2.298, train batch accuracy = 0.656, train acc
Final accuracy for italian is 0.721571
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.026194
iteration (0)/(222): train batch loss = 3.612, train batch accuracy = 0.023, train acc
iteration (50)/(222): train batch loss = 3.121, train batch accuracy = 0.189, train acc
iteration (100)/(222): train batch loss = 2.942, train batch accuracy = 0.242, train acc
iteration (150)/(222): train batch loss = 2.735, train batch accuracy = 0.171, train acc
iteration (200)/(222): train batch loss = 2.614, train batch accuracy = 0.171, train acc
Final accuracy for japanese is 0.186407
############################################################################################
############################################################################################
############################################################################################
self.size_embed = 40,  self.state_size = 15, batch_size=32, learn_rate=1e-3, self.cell_type = 'rnn'
[Executed at: Thu Apr 18 13:09:01 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-18 13:06:52.829918: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
../resource/scripts/submit.sh: line 13: 31626 Done echo "$train_test_text"
31627 Killed | STARTER=starter3 DATASET_FILE=italian.npz DATASET_DIR=$ASNLIB python3 2>&1 >> results.txt
2019-04-18 13:08:10.315761: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.031938
iteration (0)/(222): train batch loss = 3.611, train batch accuracy = 0.034, train acc
iteration (50)/(222): train batch loss = 3.571, train batch accuracy = 0.207, train acc
iteration (100)/(222): train batch loss = 3.496, train batch accuracy = 0.204, train acc
iteration (150)/(222): train batch loss = 3.400, train batch accuracy = 0.404, train acc
iteration (200)/(222): train batch loss = 3.322, train batch accuracy = 0.445, train acc
Test accuracy for japanese after 1 iterations is 0.538073
iteration (0)/(222): train batch loss = 3.303, train batch accuracy = 0.454, train acc
iteration (50)/(222): train batch loss = 3.199, train batch accuracy = 0.510, train acc
iteration (100)/(222): train batch loss = 3.187, train batch accuracy = 0.501, train acc
iteration (150)/(222): train batch loss = 3.133, train batch accuracy = 0.553, train acc
iteration (200)/(222): train batch loss = 3.152, train batch accuracy = 0.530, train acc
Test accuracy for japanese after 2 iterations is 0.611609
iteration (0)/(222): train batch loss = 3.156, train batch accuracy = 0.523, train acc
iteration (50)/(222): train batch loss = 3.105, train batch accuracy = 0.562, train acc
iteration (100)/(222): train batch loss = 3.119, train batch accuracy = 0.547, train acc
iteration (150)/(222): train batch loss = 3.078, train batch accuracy = 0.585, train acc
iteration (200)/(222): train batch loss = 3.110, train batch accuracy = 0.550, train acc
Test accuracy for japanese after 3 iterations is 0.619789
iteration (0)/(222): train batch loss = 3.125, train batch accuracy = 0.534, train acc
iteration (50)/(222): train batch loss = 3.087, train batch accuracy = 0.571, train acc
iteration (100)/(222): train batch loss = 3.098, train batch accuracy = 0.580, train acc
iteration (150)/(222): train batch loss = 3.032, train batch accuracy = 0.637, train acc
iteration (200)/(222): train batch loss = 3.020, train batch accuracy = 0.658, train acc
Test accuracy for japanese after 4 iterations is 0.731442
iteration (0)/(222): train batch loss = 3.026, train batch accuracy = 0.644, train acc
iteration (50)/(222): train batch loss = 2.926, train batch accuracy = 0.753, train acc
iteration (100)/(222): train batch loss = 2.929, train batch accuracy = 0.749, train acc
iteration (150)/(222): train batch loss = 2.885, train batch accuracy = 0.786, train acc
iteration (200)/(222): train batch loss = 2.911, train batch accuracy = 0.757, train acc
Test accuracy for japanese after 5 iterations is 0.810895
iteration (0)/(222): train batch loss = 2.932, train batch accuracy = 0.734, train acc
iteration (50)/(222): train batch loss = 2.884, train batch accuracy = 0.780, train acc
iteration (100)/(222): train batch loss = 2.885, train batch accuracy = 0.778, train acc
iteration (150)/(222): train batch loss = 2.856, train batch accuracy = 0.809, train acc
iteration (200)/(222): train batch loss = 2.885, train batch accuracy = 0.780, train acc
Test accuracy for japanese after 6 iterations is 0.828910
iteration (0)/(222): train batch loss = 2.910, train batch accuracy = 0.748, train acc
iteration (50)/(222): train batch loss = 2.849, train batch accuracy = 0.824, train acc
iteration (100)/(222): train batch loss = 2.854, train batch accuracy = 0.816, train acc
iteration (150)/(222): train batch loss = 2.825, train batch accuracy = 0.845, train acc
iteration (200)/(222): train batch loss = 2.860, train batch accuracy = 0.810, train acc
Test accuracy for japanese after 7 iterations is 0.848664
iteration (0)/(222): train batch loss = 2.863, train batch accuracy = 0.803, train acc
iteration (50)/(222): train batch loss = 2.815, train batch accuracy = 0.849, train acc
iteration (100)/(222): train batch loss = 2.824, train batch accuracy = 0.841, train acc
iteration (150)/(222): train batch loss = 2.803, train batch accuracy = 0.860, train acc
iteration (200)/(222): train batch loss = 2.845, train batch accuracy = 0.816, train acc
Test accuracy for japanese after 8 iterations is 0.853799
iteration (0)/(222): train batch loss = 2.841, train batch accuracy = 0.822, train acc
iteration (50)/(222): train batch loss = 2.806, train batch accuracy = 0.853, train acc
iteration (100)/(222): train batch loss = 2.817, train batch accuracy = 0.842, train acc
iteration (150)/(222): train batch loss = 2.795, train batch accuracy = 0.865, train acc
iteration (200)/(222): train batch loss = 2.840, train batch accuracy = 0.818, train acc
Test accuracy for japanese after 9 iterations is 0.853625
iteration (0)/(222): train batch loss = 2.837, train batch accuracy = 0.821, train acc
iteration (50)/(222): train batch loss = 2.804, train batch accuracy = 0.853, train acc
iteration (100)/(222): train batch loss = 2.813, train batch accuracy = 0.846, train acc
iteration (150)/(222): train batch loss = 2.791, train batch accuracy = 0.868, train acc
iteration (200)/(222): train batch loss = 2.839, train batch accuracy = 0.820, train acc
Test accuracy for japanese after 10 iterations is 0.853451
iteration (0)/(222): train batch loss = 2.835, train batch accuracy = 0.822, train acc
iteration (50)/(222): train batch loss = 2.801, train batch accuracy = 0.855, train acc
iteration (100)/(222): train batch loss = 2.811, train batch accuracy = 0.847, train acc
iteration (150)/(222): train batch loss = 2.790, train batch accuracy = 0.868, train acc
iteration (200)/(222): train batch loss = 2.837, train batch accuracy = 0.821, train acc
Test accuracy for japanese after 11 iterations is 0.853538
iteration (0)/(222): train batch loss = 2.833, train batch accuracy = 0.823, train acc
iteration (50)/(222): train batch loss = 2.797, train batch accuracy = 0.863, train acc
iteration (100)/(222): train batch loss = 2.805, train batch accuracy = 0.853, train acc
iteration (150)/(222): train batch loss = 2.783, train batch accuracy = 0.875, train acc
iteration (200)/(222): train batch loss = 2.825, train batch accuracy = 0.833, train acc
Final accuracy for japanese is 0.865199
############################################################################################
############################################################################################
############################################################################################
self.size_embed = 40,  self.state_size = 40, batch_size=32, learn_rate=1e-3, self.cell_type = 'rnn'
[Executed at: Thu Apr 18 13:34:15 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-18 13:32:02.724835: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
../resource/scripts/submit.sh: line 13: 14457 Done echo "$train_test_text"
14458 Killed | STARTER=starter3 DATASET_FILE=italian.npz DATASET_DIR=$ASNLIB python3 2>&1 >> results.txt
2019-04-18 13:33:19.780926: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.026630
iteration (0)/(222): train batch loss = 3.611, train batch accuracy = 0.037, train acc
iteration (50)/(222): train batch loss = 3.523, train batch accuracy = 0.110, train acc
iteration (100)/(222): train batch loss = 3.377, train batch accuracy = 0.436, train acc
iteration (150)/(222): train batch loss = 3.191, train batch accuracy = 0.510, train acc
iteration (200)/(222): train batch loss = 3.191, train batch accuracy = 0.490, train acc
Test accuracy for japanese after 1 iterations is 0.559568
iteration (0)/(222): train batch loss = 3.200, train batch accuracy = 0.480, train acc
iteration (50)/(222): train batch loss = 3.155, train batch accuracy = 0.514, train acc
iteration (100)/(222): train batch loss = 3.153, train batch accuracy = 0.527, train acc
iteration (150)/(222): train batch loss = 3.107, train batch accuracy = 0.556, train acc
iteration (200)/(222): train batch loss = 3.140, train batch accuracy = 0.520, train acc
Test accuracy for japanese after 2 iterations is 0.594900
iteration (0)/(222): train batch loss = 3.144, train batch accuracy = 0.516, train acc
iteration (50)/(222): train batch loss = 3.078, train batch accuracy = 0.595, train acc
iteration (100)/(222): train batch loss = 3.063, train batch accuracy = 0.601, train acc
iteration (150)/(222): train batch loss = 3.003, train batch accuracy = 0.664, train acc
iteration (200)/(222): train batch loss = 3.010, train batch accuracy = 0.653, train acc
Test accuracy for japanese after 3 iterations is 0.726395
iteration (0)/(222): train batch loss = 3.020, train batch accuracy = 0.645, train acc
iteration (50)/(222): train batch loss = 2.971, train batch accuracy = 0.689, train acc
iteration (100)/(222): train batch loss = 2.991, train batch accuracy = 0.675, train acc
iteration (150)/(222): train batch loss = 2.948, train batch accuracy = 0.714, train acc
iteration (200)/(222): train batch loss = 2.938, train batch accuracy = 0.719, train acc
Test accuracy for japanese after 4 iterations is 0.786529
iteration (0)/(222): train batch loss = 2.955, train batch accuracy = 0.708, train acc
iteration (50)/(222): train batch loss = 2.896, train batch accuracy = 0.764, train acc
iteration (100)/(222): train batch loss = 2.925, train batch accuracy = 0.732, train acc
iteration (150)/(222): train batch loss = 2.874, train batch accuracy = 0.789, train acc
iteration (200)/(222): train batch loss = 2.903, train batch accuracy = 0.760, train acc
Test accuracy for japanese after 5 iterations is 0.810112
iteration (0)/(222): train batch loss = 2.906, train batch accuracy = 0.765, train acc
iteration (50)/(222): train batch loss = 2.848, train batch accuracy = 0.819, train acc
iteration (100)/(222): train batch loss = 2.865, train batch accuracy = 0.805, train acc
iteration (150)/(222): train batch loss = 2.831, train batch accuracy = 0.839, train acc
iteration (200)/(222): train batch loss = 2.862, train batch accuracy = 0.802, train acc
Test accuracy for japanese after 6 iterations is 0.820381
iteration (0)/(222): train batch loss = 2.854, train batch accuracy = 0.808, train acc
iteration (50)/(222): train batch loss = 2.818, train batch accuracy = 0.843, train acc
iteration (100)/(222): train batch loss = 2.827, train batch accuracy = 0.837, train acc
iteration (150)/(222): train batch loss = 2.803, train batch accuracy = 0.861, train acc
iteration (200)/(222): train batch loss = 2.841, train batch accuracy = 0.818, train acc
Test accuracy for japanese after 7 iterations is 0.841528
iteration (0)/(222): train batch loss = 2.833, train batch accuracy = 0.826, train acc
iteration (50)/(222): train batch loss = 2.801, train batch accuracy = 0.858, train acc
iteration (100)/(222): train batch loss = 2.808, train batch accuracy = 0.852, train acc
iteration (150)/(222): train batch loss = 2.792, train batch accuracy = 0.867, train acc
iteration (200)/(222): train batch loss = 2.840, train batch accuracy = 0.817, train acc
Test accuracy for japanese after 8 iterations is 0.848055
iteration (0)/(222): train batch loss = 2.828, train batch accuracy = 0.828, train acc
iteration (50)/(222): train batch loss = 2.798, train batch accuracy = 0.859, train acc
iteration (100)/(222): train batch loss = 2.802, train batch accuracy = 0.856, train acc
iteration (150)/(222): train batch loss = 2.790, train batch accuracy = 0.867, train acc
iteration (200)/(222): train batch loss = 2.838, train batch accuracy = 0.818, train acc
Test accuracy for japanese after 9 iterations is 0.852841
iteration (0)/(222): train batch loss = 2.827, train batch accuracy = 0.830, train acc
iteration (50)/(222): train batch loss = 2.797, train batch accuracy = 0.859, train acc
iteration (100)/(222): train batch loss = 2.801, train batch accuracy = 0.856, train acc
iteration (150)/(222): train batch loss = 2.789, train batch accuracy = 0.868, train acc
iteration (200)/(222): train batch loss = 2.836, train batch accuracy = 0.820, train acc
Test accuracy for japanese after 10 iterations is 0.855278
iteration (0)/(222): train batch loss = 2.827, train batch accuracy = 0.830, train acc
iteration (50)/(222): train batch loss = 2.795, train batch accuracy = 0.862, train acc
iteration (100)/(222): train batch loss = 2.800, train batch accuracy = 0.856, train acc
iteration (150)/(222): train batch loss = 2.786, train batch accuracy = 0.870, train acc
iteration (200)/(222): train batch loss = 2.835, train batch accuracy = 0.822, train acc
Final accuracy for japanese is 0.854147
############################################################################################
############################################################################################
20	20	32	1.00E-03	bi rnn	1	Adam	1	0.5

[Executed at: Thu Apr 18 13:43:49 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-18 13:41:57.741506: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/42/work/starter3.py:336: BasicRNNCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is equivalent as tf.keras.layers.SimpleRNNCell, and will be replaced by that in Tensorflow 2.0.
2019-04-18 13:43:00.801068: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/42/work/starter3.py:336: BasicRNNCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is equivalent as tf.keras.layers.SimpleRNNCell, and will be replaced by that in Tensorflow 2.0.


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for italian after 0 iterations is 0.020683
iteration (0)/(432): train batch loss = 3.689, train batch accuracy = 0.020, train acc
iteration (50)/(432): train batch loss = 3.603, train batch accuracy = 0.149, train acc
iteration (100)/(432): train batch loss = 3.560, train batch accuracy = 0.190, train acc
iteration (150)/(432): train batch loss = 3.392, train batch accuracy = 0.414, train acc
iteration (200)/(432): train batch loss = 3.285, train batch accuracy = 0.470, train acc
iteration (250)/(432): train batch loss = 3.376, train batch accuracy = 0.366, train acc
iteration (300)/(432): train batch loss = 3.411, train batch accuracy = 0.325, train acc
iteration (350)/(432): train batch loss = 3.319, train batch accuracy = 0.417, train acc
iteration (400)/(432): train batch loss = 3.238, train batch accuracy = 0.513, train acc
Test accuracy for italian after 1 iterations is 0.529978
iteration (0)/(432): train batch loss = 3.209, train batch accuracy = 0.534, train acc
iteration (50)/(432): train batch loss = 3.250, train batch accuracy = 0.494, train acc
iteration (100)/(432): train batch loss = 3.282, train batch accuracy = 0.470, train acc
iteration (150)/(432): train batch loss = 3.182, train batch accuracy = 0.554, train acc
iteration (200)/(432): train batch loss = 3.176, train batch accuracy = 0.565, train acc
iteration (250)/(432): train batch loss = 3.152, train batch accuracy = 0.601, train acc
iteration (300)/(432): train batch loss = 3.202, train batch accuracy = 0.536, train acc
iteration (350)/(432): train batch loss = 3.207, train batch accuracy = 0.530, train acc
iteration (400)/(432): train batch loss = 3.139, train batch accuracy = 0.601, train acc
Final accuracy for italian is 0.595713
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.022191
iteration (0)/(222): train batch loss = 3.611, train batch accuracy = 0.022, train acc
iteration (50)/(222): train batch loss = 3.541, train batch accuracy = 0.138, train acc
iteration (100)/(222): train batch loss = 3.459, train batch accuracy = 0.233, train acc
iteration (150)/(222): train batch loss = 3.319, train batch accuracy = 0.426, train acc
iteration (200)/(222): train batch loss = 3.259, train batch accuracy = 0.417, train acc
Test accuracy for japanese after 1 iterations is 0.435732
iteration (0)/(222): train batch loss = 3.263, train batch accuracy = 0.404, train acc
iteration (50)/(222): train batch loss = 3.191, train batch accuracy = 0.492, train acc
iteration (100)/(222): train batch loss = 3.157, train batch accuracy = 0.536, train acc
iteration (150)/(222): train batch loss = 3.079, train batch accuracy = 0.599, train acc
iteration (200)/(222): train batch loss = 3.106, train batch accuracy = 0.564, train acc
Test accuracy for japanese after 2 iterations is 0.605343
iteration (0)/(222): train batch loss = 3.114, train batch accuracy = 0.557, train acc
iteration (50)/(222): train batch loss = 3.075, train batch accuracy = 0.589, train acc
iteration (100)/(222): train batch loss = 3.070, train batch accuracy = 0.599, train acc
iteration (150)/(222): train batch loss = 3.026, train batch accuracy = 0.644, train acc
iteration (200)/(222): train batch loss = 3.054, train batch accuracy = 0.612, train acc
Test accuracy for japanese after 3 iterations is 0.628840
iteration (0)/(222): train batch loss = 3.076, train batch accuracy = 0.583, train acc
iteration (50)/(222): train batch loss = 3.044, train batch accuracy = 0.614, train acc
iteration (100)/(222): train batch loss = 3.037, train batch accuracy = 0.628, train acc
iteration (150)/(222): train batch loss = 2.985, train batch accuracy = 0.678, train acc
iteration (200)/(222): train batch loss = 2.977, train batch accuracy = 0.692, train acc
Test accuracy for japanese after 4 iterations is 0.703420
iteration (0)/(222): train batch loss = 3.003, train batch accuracy = 0.663, train acc
iteration (50)/(222): train batch loss = 2.960, train batch accuracy = 0.705, train acc
iteration (100)/(222): train batch loss = 2.991, train batch accuracy = 0.675, train acc
iteration (150)/(222): train batch loss = 2.937, train batch accuracy = 0.724, train acc
iteration (200)/(222): train batch loss = 2.962, train batch accuracy = 0.698, train acc
Test accuracy for japanese after 5 iterations is 0.705074
iteration (0)/(222): train batch loss = 2.995, train batch accuracy = 0.663, train acc
iteration (50)/(222): train batch loss = 2.927, train batch accuracy = 0.739, train acc
iteration (100)/(222): train batch loss = 2.949, train batch accuracy = 0.714, train acc
iteration (150)/(222): train batch loss = 2.899, train batch accuracy = 0.763, train acc
iteration (200)/(222): train batch loss = 2.923, train batch accuracy = 0.742, train acc
Test accuracy for japanese after 6 iterations is 0.763554
iteration (0)/(222): train batch loss = 2.954, train batch accuracy = 0.712, train acc
iteration (50)/(222): train batch loss = 2.890, train batch accuracy = 0.774, train acc
iteration (100)/(222): train batch loss = 2.897, train batch accuracy = 0.772, train acc
iteration (150)/(222): train batch loss = 2.863, train batch accuracy = 0.810, train acc
iteration (200)/(222): train batch loss = 2.877, train batch accuracy = 0.791, train acc
Final accuracy for japanese is 0.793752
############################################################################################
############################################################################################
40	20	32	1.00E-03	bi rnn	1	Adam	1	0.8	5, 0.819337	1, 0.617233
[Executed at: Thu Apr 18 14:15:27 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-18 14:13:34.249549: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/43/work/starter3.py:336: BasicRNNCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is equivalent as tf.keras.layers.SimpleRNNCell, and will be replaced by that in Tensorflow 2.0.
2019-04-18 14:14:42.550275: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/43/work/starter3.py:336: BasicRNNCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is equivalent as tf.keras.layers.SimpleRNNCell, and will be replaced by that in Tensorflow 2.0.


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for italian after 0 iterations is 0.022358
iteration (0)/(432): train batch loss = 3.689, train batch accuracy = 0.020, train acc
iteration (50)/(432): train batch loss = 3.585, train batch accuracy = 0.157, train acc
iteration (100)/(432): train batch loss = 3.482, train batch accuracy = 0.288, train acc
iteration (150)/(432): train batch loss = 3.342, train batch accuracy = 0.434, train acc
iteration (200)/(432): train batch loss = 3.248, train batch accuracy = 0.498, train acc
iteration (250)/(432): train batch loss = 3.247, train batch accuracy = 0.489, train acc
iteration (300)/(432): train batch loss = 3.244, train batch accuracy = 0.495, train acc
iteration (350)/(432): train batch loss = 3.241, train batch accuracy = 0.490, train acc
iteration (400)/(432): train batch loss = 3.165, train batch accuracy = 0.588, train acc
Test accuracy for italian after 1 iterations is 0.588260
iteration (0)/(432): train batch loss = 3.152, train batch accuracy = 0.590, train acc
iteration (50)/(432): train batch loss = 3.195, train batch accuracy = 0.546, train acc
iteration (100)/(432): train batch loss = 3.233, train batch accuracy = 0.502, train acc
iteration (150)/(432): train batch loss = 3.148, train batch accuracy = 0.586, train acc
iteration (200)/(432): train batch loss = 3.146, train batch accuracy = 0.588, train acc
iteration (250)/(432): train batch loss = 3.123, train batch accuracy = 0.608, train acc
iteration (300)/(432): train batch loss = 3.143, train batch accuracy = 0.609, train acc
iteration (350)/(432): train batch loss = 3.185, train batch accuracy = 0.549, train acc
iteration (400)/(432): train batch loss = 3.120, train batch accuracy = 0.610, train acc
Final accuracy for italian is 0.617233
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.029588
iteration (0)/(222): train batch loss = 3.611, train batch accuracy = 0.037, train acc
iteration (50)/(222): train batch loss = 3.506, train batch accuracy = 0.204, train acc
iteration (100)/(222): train batch loss = 3.387, train batch accuracy = 0.315, train acc
iteration (150)/(222): train batch loss = 3.236, train batch accuracy = 0.449, train acc
iteration (200)/(222): train batch loss = 3.232, train batch accuracy = 0.437, train acc
Test accuracy for japanese after 1 iterations is 0.553129
iteration (0)/(222): train batch loss = 3.209, train batch accuracy = 0.472, train acc
iteration (50)/(222): train batch loss = 3.149, train batch accuracy = 0.514, train acc
iteration (100)/(222): train batch loss = 3.154, train batch accuracy = 0.504, train acc
iteration (150)/(222): train batch loss = 3.064, train batch accuracy = 0.616, train acc
iteration (200)/(222): train batch loss = 2.969, train batch accuracy = 0.718, train acc
Test accuracy for japanese after 2 iterations is 0.777043
iteration (0)/(222): train batch loss = 2.993, train batch accuracy = 0.680, train acc
iteration (50)/(222): train batch loss = 2.923, train batch accuracy = 0.746, train acc
iteration (100)/(222): train batch loss = 2.954, train batch accuracy = 0.708, train acc
iteration (150)/(222): train batch loss = 2.908, train batch accuracy = 0.753, train acc
iteration (200)/(222): train batch loss = 2.923, train batch accuracy = 0.745, train acc
Test accuracy for japanese after 3 iterations is 0.805500
iteration (0)/(222): train batch loss = 2.951, train batch accuracy = 0.711, train acc
iteration (50)/(222): train batch loss = 2.893, train batch accuracy = 0.768, train acc
iteration (100)/(222): train batch loss = 2.897, train batch accuracy = 0.769, train acc
iteration (150)/(222): train batch loss = 2.863, train batch accuracy = 0.803, train acc
iteration (200)/(222): train batch loss = 2.889, train batch accuracy = 0.773, train acc
Test accuracy for japanese after 4 iterations is 0.829519
iteration (0)/(222): train batch loss = 2.922, train batch accuracy = 0.737, train acc
iteration (50)/(222): train batch loss = 2.870, train batch accuracy = 0.789, train acc
iteration (100)/(222): train batch loss = 2.864, train batch accuracy = 0.805, train acc
iteration (150)/(222): train batch loss = 2.823, train batch accuracy = 0.846, train acc
iteration (200)/(222): train batch loss = 2.860, train batch accuracy = 0.806, train acc
Test accuracy for japanese after 5 iterations is 0.813158
iteration (0)/(222): train batch loss = 2.862, train batch accuracy = 0.804, train acc
iteration (50)/(222): train batch loss = 2.829, train batch accuracy = 0.837, train acc
iteration (100)/(222): train batch loss = 2.824, train batch accuracy = 0.838, train acc
iteration (150)/(222): train batch loss = 2.804, train batch accuracy = 0.856, train acc
iteration (200)/(222): train batch loss = 2.842, train batch accuracy = 0.818, train acc
Final accuracy for japanese is 0.819337

############################################################################################
############################################################################################
40	20	32	1.00E-03	lstm	1	Adam	-	-	4, 0.710382	0, 0.285882
[Executed at: Thu Apr 18 14:23:17 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-18 14:21:15.421512: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/44/work/starter3.py:329: BasicLSTMCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is deprecated, please use tf.nn.rnn_cell.LSTMCell, which supports all the feature this cell currently has. Please replace the existing code with tf.nn.rnn_cell.LSTMCell(name='basic_lstm_cell').
2019-04-18 14:22:19.544003: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/44/work/starter3.py:329: BasicLSTMCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is deprecated, please use tf.nn.rnn_cell.LSTMCell, which supports all the feature this cell currently has. Please replace the existing code with tf.nn.rnn_cell.LSTMCell(name='basic_lstm_cell').


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for italian after 0 iterations is 0.023028
iteration (0)/(432): train batch loss = 3.689, train batch accuracy = 0.026, train acc
iteration (50)/(432): train batch loss = 3.192, train batch accuracy = 0.170, train acc
iteration (100)/(432): train batch loss = 3.102, train batch accuracy = 0.140, train acc
iteration (150)/(432): train batch loss = 3.000, train batch accuracy = 0.253, train acc
iteration (200)/(432): train batch loss = 2.880, train batch accuracy = 0.367, train acc
iteration (250)/(432): train batch loss = 2.976, train batch accuracy = 0.228, train acc
iteration (300)/(432): train batch loss = 2.792, train batch accuracy = 0.218, train acc
iteration (350)/(432): train batch loss = 2.833, train batch accuracy = 0.287, train acc
iteration (400)/(432): train batch loss = 2.700, train batch accuracy = 0.324, train acc
Final accuracy for italian is 0.285882
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.024889
iteration (0)/(222): train batch loss = 3.611, train batch accuracy = 0.018, train acc
iteration (50)/(222): train batch loss = 3.171, train batch accuracy = 0.209, train acc
iteration (100)/(222): train batch loss = 3.034, train batch accuracy = 0.218, train acc
iteration (150)/(222): train batch loss = 2.927, train batch accuracy = 0.247, train acc
iteration (200)/(222): train batch loss = 2.910, train batch accuracy = 0.266, train acc
Test accuracy for japanese after 1 iterations is 0.295101
iteration (0)/(222): train batch loss = 2.939, train batch accuracy = 0.235, train acc
iteration (50)/(222): train batch loss = 2.780, train batch accuracy = 0.236, train acc
iteration (100)/(222): train batch loss = 2.741, train batch accuracy = 0.230, train acc
iteration (150)/(222): train batch loss = 2.611, train batch accuracy = 0.533, train acc
iteration (200)/(222): train batch loss = 2.596, train batch accuracy = 0.557, train acc
Test accuracy for japanese after 2 iterations is 0.642851
iteration (0)/(222): train batch loss = 2.621, train batch accuracy = 0.535, train acc
iteration (50)/(222): train batch loss = 2.510, train batch accuracy = 0.631, train acc
iteration (100)/(222): train batch loss = 2.486, train batch accuracy = 0.597, train acc
iteration (150)/(222): train batch loss = 2.424, train batch accuracy = 0.646, train acc
iteration (200)/(222): train batch loss = 2.434, train batch accuracy = 0.605, train acc
Test accuracy for japanese after 3 iterations is 0.679140
iteration (0)/(222): train batch loss = 2.476, train batch accuracy = 0.574, train acc
iteration (50)/(222): train batch loss = 2.382, train batch accuracy = 0.651, train acc
iteration (100)/(222): train batch loss = 2.390, train batch accuracy = 0.617, train acc
iteration (150)/(222): train batch loss = 2.352, train batch accuracy = 0.657, train acc
iteration (200)/(222): train batch loss = 2.372, train batch accuracy = 0.629, train acc
Test accuracy for japanese after 4 iterations is 0.696806
iteration (0)/(222): train batch loss = 2.417, train batch accuracy = 0.597, train acc
iteration (50)/(222): train batch loss = 2.330, train batch accuracy = 0.670, train acc
iteration (100)/(222): train batch loss = 2.342, train batch accuracy = 0.624, train acc
iteration (150)/(222): train batch loss = 2.314, train batch accuracy = 0.674, train acc
iteration (200)/(222): train batch loss = 2.326, train batch accuracy = 0.640, train acc
Final accuracy for japanese is 0.710382
##################################################################################################################################
##################################################################################################################################

[Executed at: Thu Apr 18 14:32:39 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-18 14:30:23.971196: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
../resource/scripts/submit.sh: line 13: 11654 Done echo "$train_test_text"
11655 Killed | STARTER=starter3 DATASET_FILE=italian.npz DATASET_DIR=$ASNLIB python3 2>&1 >> results.txt
2019-04-18 14:31:44.020913: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.024106
iteration (0)/(222): train batch loss = 3.615, train batch accuracy = 0.019, train acc
iteration (50)/(222): train batch loss = 3.152, train batch accuracy = 0.198, train acc
iteration (100)/(222): train batch loss = 2.898, train batch accuracy = 0.199, train acc
iteration (150)/(222): train batch loss = 2.656, train batch accuracy = 0.287, train acc
iteration (200)/(222): train batch loss = 2.561, train batch accuracy = 0.308, train acc
Test accuracy for japanese after 1 iterations is 0.382386
iteration (0)/(222): train batch loss = 2.562, train batch accuracy = 0.284, train acc
iteration (50)/(222): train batch loss = 2.386, train batch accuracy = 0.438, train acc
iteration (100)/(222): train batch loss = 2.328, train batch accuracy = 0.555, train acc
iteration (150)/(222): train batch loss = 2.224, train batch accuracy = 0.673, train acc
iteration (200)/(222): train batch loss = 2.239, train batch accuracy = 0.663, train acc
Test accuracy for japanese after 2 iterations is 0.748934
iteration (0)/(222): train batch loss = 2.246, train batch accuracy = 0.658, train acc
iteration (50)/(222): train batch loss = 2.139, train batch accuracy = 0.725, train acc
iteration (100)/(222): train batch loss = 2.117, train batch accuracy = 0.730, train acc
iteration (150)/(222): train batch loss = 2.051, train batch accuracy = 0.760, train acc
iteration (200)/(222): train batch loss = 2.091, train batch accuracy = 0.741, train acc
Test accuracy for japanese after 3 iterations is 0.810634
iteration (0)/(222): train batch loss = 2.102, train batch accuracy = 0.739, train acc
iteration (50)/(222): train batch loss = 2.021, train batch accuracy = 0.784, train acc
iteration (100)/(222): train batch loss = 2.009, train batch accuracy = 0.796, train acc
iteration (150)/(222): train batch loss = 1.972, train batch accuracy = 0.832, train acc
iteration (200)/(222): train batch loss = 2.016, train batch accuracy = 0.800, train acc
Test accuracy for japanese after 4 iterations is 0.853451
iteration (0)/(222): train batch loss = 2.023, train batch accuracy = 0.800, train acc
iteration (50)/(222): train batch loss = 1.953, train batch accuracy = 0.850, train acc
iteration (100)/(222): train batch loss = 1.941, train batch accuracy = 0.852, train acc
iteration (150)/(222): train batch loss = 1.923, train batch accuracy = 0.861, train acc
iteration (200)/(222): train batch loss = 1.967, train batch accuracy = 0.832, train acc
Test accuracy for japanese after 5 iterations is 0.864590
iteration (0)/(222): train batch loss = 1.969, train batch accuracy = 0.834, train acc
iteration (50)/(222): train batch loss = 1.910, train batch accuracy = 0.872, train acc
iteration (100)/(222): train batch loss = 1.907, train batch accuracy = 0.869, train acc
iteration (150)/(222): train batch loss = 1.894, train batch accuracy = 0.867, train acc
iteration (200)/(222): train batch loss = 1.942, train batch accuracy = 0.833, train acc
Test accuracy for japanese after 6 iterations is 0.864851
iteration (0)/(222): train batch loss = 1.935, train batch accuracy = 0.853, train acc
iteration (50)/(222): train batch loss = 1.886, train batch accuracy = 0.872, train acc
iteration (100)/(222): train batch loss = 1.884, train batch accuracy = 0.872, train acc
iteration (150)/(222): train batch loss = 1.876, train batch accuracy = 0.871, train acc
iteration (200)/(222): train batch loss = 1.928, train batch accuracy = 0.838, train acc
Test accuracy for japanese after 7 iterations is 0.863893
iteration (0)/(222): train batch loss = 1.915, train batch accuracy = 0.862, train acc
iteration (50)/(222): train batch loss = 1.872, train batch accuracy = 0.874, train acc
iteration (100)/(222): train batch loss = 1.869, train batch accuracy = 0.870, train acc
iteration (150)/(222): train batch loss = 1.865, train batch accuracy = 0.870, train acc
iteration (200)/(222): train batch loss = 1.919, train batch accuracy = 0.837, train acc
Test accuracy for japanese after 8 iterations is 0.861457
iteration (0)/(222): train batch loss = 1.902, train batch accuracy = 0.858, train acc
iteration (50)/(222): train batch loss = 1.861, train batch accuracy = 0.869, train acc
iteration (100)/(222): train batch loss = 1.859, train batch accuracy = 0.870, train acc
iteration (150)/(222): train batch loss = 1.857, train batch accuracy = 0.872, train acc
iteration (200)/(222): train batch loss = 1.912, train batch accuracy = 0.833, train acc
Test accuracy for japanese after 9 iterations is 0.860935
iteration (0)/(222): train batch loss = 1.890, train batch accuracy = 0.863, train acc
iteration (50)/(222): train batch loss = 1.854, train batch accuracy = 0.868, train acc
iteration (100)/(222): train batch loss = 1.852, train batch accuracy = 0.871, train acc
iteration (150)/(222): train batch loss = 1.850, train batch accuracy = 0.872, train acc
iteration (200)/(222): train batch loss = 1.907, train batch accuracy = 0.828, train acc
Test accuracy for japanese after 10 iterations is 0.860761
iteration (0)/(222): train batch loss = 1.882, train batch accuracy = 0.863, train acc
iteration (50)/(222): train batch loss = 1.849, train batch accuracy = 0.866, train acc
iteration (100)/(222): train batch loss = 1.847, train batch accuracy = 0.872, train acc
iteration (150)/(222): train batch loss = 1.847, train batch accuracy = 0.872, train acc
iteration (200)/(222): train batch loss = 1.891, train batch accuracy = 0.838, train acc
Test accuracy for japanese after 11 iterations is 0.865112
iteration (0)/(222): train batch loss = 1.871, train batch accuracy = 0.874, train acc
iteration (50)/(222): train batch loss = 1.839, train batch accuracy = 0.872, train acc
iteration (100)/(222): train batch loss = 1.835, train batch accuracy = 0.879, train acc
iteration (150)/(222): train batch loss = 1.842, train batch accuracy = 0.868, train acc
iteration (200)/(222): train batch loss = 1.872, train batch accuracy = 0.839, train acc
Test accuracy for japanese after 12 iterations is 0.866069
iteration (0)/(222): train batch loss = 1.855, train batch accuracy = 0.875, train acc
iteration (50)/(222): train batch loss = 1.834, train batch accuracy = 0.872, train acc
iteration (100)/(222): train batch loss = 1.831, train batch accuracy = 0.880, train acc
iteration (150)/(222): train batch loss = 1.838, train batch accuracy = 0.870, train acc
iteration (200)/(222): train batch loss = 1.868, train batch accuracy = 0.840, train acc
Final accuracy for japanese is 0.866330
#########################################################################################################
#########################################################################################################
#########################################################################################################
40	15	32	-	rnn	-	Adam	-	-	11, 0.910713	-
[Executed at: Thu Apr 18 14:41:19 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-18 14:39:09.597481: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
../resource/scripts/submit.sh: line 13: 16088 Done echo "$train_test_text"
16089 Killed | STARTER=starter3 DATASET_FILE=italian.npz DATASET_DIR=$ASNLIB python3 2>&1 >> results.txt
2019-04-18 14:40:29.400037: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.026194
iteration (0)/(222): train batch loss = 3.612, train batch accuracy = 0.019, train acc
iteration (50)/(222): train batch loss = 3.202, train batch accuracy = 0.091, train acc
iteration (100)/(222): train batch loss = 2.949, train batch accuracy = 0.341, train acc
iteration (150)/(222): train batch loss = 2.648, train batch accuracy = 0.408, train acc
iteration (200)/(222): train batch loss = 2.531, train batch accuracy = 0.387, train acc
Test accuracy for japanese after 1 iterations is 0.509877
iteration (0)/(222): train batch loss = 2.541, train batch accuracy = 0.400, train acc
iteration (50)/(222): train batch loss = 2.352, train batch accuracy = 0.712, train acc
iteration (100)/(222): train batch loss = 2.306, train batch accuracy = 0.716, train acc
iteration (150)/(222): train batch loss = 2.200, train batch accuracy = 0.764, train acc
iteration (200)/(222): train batch loss = 2.206, train batch accuracy = 0.744, train acc
Test accuracy for japanese after 2 iterations is 0.801932
iteration (0)/(222): train batch loss = 2.235, train batch accuracy = 0.701, train acc
iteration (50)/(222): train batch loss = 2.117, train batch accuracy = 0.768, train acc
iteration (100)/(222): train batch loss = 2.107, train batch accuracy = 0.749, train acc
iteration (150)/(222): train batch loss = 2.057, train batch accuracy = 0.816, train acc
iteration (200)/(222): train batch loss = 2.054, train batch accuracy = 0.785, train acc
Test accuracy for japanese after 3 iterations is 0.849970
iteration (0)/(222): train batch loss = 2.089, train batch accuracy = 0.761, train acc
iteration (50)/(222): train batch loss = 2.009, train batch accuracy = 0.833, train acc
iteration (100)/(222): train batch loss = 2.012, train batch accuracy = 0.809, train acc
iteration (150)/(222): train batch loss = 1.968, train batch accuracy = 0.856, train acc
iteration (200)/(222): train batch loss = 1.981, train batch accuracy = 0.838, train acc
Test accuracy for japanese after 4 iterations is 0.881472
iteration (0)/(222): train batch loss = 2.008, train batch accuracy = 0.830, train acc
iteration (50)/(222): train batch loss = 1.944, train batch accuracy = 0.880, train acc
iteration (100)/(222): train batch loss = 1.958, train batch accuracy = 0.846, train acc
iteration (150)/(222): train batch loss = 1.927, train batch accuracy = 0.902, train acc
iteration (200)/(222): train batch loss = 1.941, train batch accuracy = 0.875, train acc
Test accuracy for japanese after 5 iterations is 0.898181
iteration (0)/(222): train batch loss = 1.961, train batch accuracy = 0.863, train acc
iteration (50)/(222): train batch loss = 1.898, train batch accuracy = 0.907, train acc
iteration (100)/(222): train batch loss = 1.919, train batch accuracy = 0.881, train acc
iteration (150)/(222): train batch loss = 1.897, train batch accuracy = 0.908, train acc
iteration (200)/(222): train batch loss = 1.908, train batch accuracy = 0.896, train acc
Test accuracy for japanese after 6 iterations is 0.905665
iteration (0)/(222): train batch loss = 1.927, train batch accuracy = 0.883, train acc
iteration (50)/(222): train batch loss = 1.872, train batch accuracy = 0.921, train acc
iteration (100)/(222): train batch loss = 1.893, train batch accuracy = 0.892, train acc
iteration (150)/(222): train batch loss = 1.876, train batch accuracy = 0.913, train acc
iteration (200)/(222): train batch loss = 1.892, train batch accuracy = 0.898, train acc
Test accuracy for japanese after 7 iterations is 0.908885
iteration (0)/(222): train batch loss = 1.900, train batch accuracy = 0.893, train acc
iteration (50)/(222): train batch loss = 1.857, train batch accuracy = 0.930, train acc
iteration (100)/(222): train batch loss = 1.868, train batch accuracy = 0.904, train acc
iteration (150)/(222): train batch loss = 1.865, train batch accuracy = 0.914, train acc
iteration (200)/(222): train batch loss = 1.881, train batch accuracy = 0.898, train acc
Test accuracy for japanese after 8 iterations is 0.910104
iteration (0)/(222): train batch loss = 1.884, train batch accuracy = 0.894, train acc
iteration (50)/(222): train batch loss = 1.848, train batch accuracy = 0.927, train acc
iteration (100)/(222): train batch loss = 1.857, train batch accuracy = 0.912, train acc
iteration (150)/(222): train batch loss = 1.857, train batch accuracy = 0.915, train acc
iteration (200)/(222): train batch loss = 1.874, train batch accuracy = 0.897, train acc
Test accuracy for japanese after 9 iterations is 0.909494
iteration (0)/(222): train batch loss = 1.874, train batch accuracy = 0.899, train acc
iteration (50)/(222): train batch loss = 1.841, train batch accuracy = 0.925, train acc
iteration (100)/(222): train batch loss = 1.849, train batch accuracy = 0.912, train acc
iteration (150)/(222): train batch loss = 1.850, train batch accuracy = 0.914, train acc
iteration (200)/(222): train batch loss = 1.869, train batch accuracy = 0.899, train acc
Test accuracy for japanese after 10 iterations is 0.909668
iteration (0)/(222): train batch loss = 1.867, train batch accuracy = 0.902, train acc
iteration (50)/(222): train batch loss = 1.836, train batch accuracy = 0.928, train acc
iteration (100)/(222): train batch loss = 1.842, train batch accuracy = 0.915, train acc
iteration (150)/(222): train batch loss = 1.845, train batch accuracy = 0.913, train acc
iteration (200)/(222): train batch loss = 1.864, train batch accuracy = 0.897, train acc
Test accuracy for japanese after 11 iterations is 0.910365
iteration (0)/(222): train batch loss = 1.862, train batch accuracy = 0.905, train acc
iteration (50)/(222): train batch loss = 1.830, train batch accuracy = 0.931, train acc
iteration (100)/(222): train batch loss = 1.838, train batch accuracy = 0.915, train acc
iteration (150)/(222): train batch loss = 1.841, train batch accuracy = 0.910, train acc
iteration (200)/(222): train batch loss = 1.860, train batch accuracy = 0.898, train acc
Final accuracy for japanese is 0.910713
##########################################################################################
##########################################################################################
##########################################################################################
40	15	32	1.00E-02	bidic_lstm	-	adam		-	2, .25	-
[Executed at: Thu Apr 18 23:27:29 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-18 23:25:43.668931: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/47/work/starter3.py:380: BasicLSTMCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is deprecated, please use tf.nn.rnn_cell.LSTMCell, which supports all the feature this cell currently has. Please replace the existing code with tf.nn.rnn_cell.LSTMCell(name='basic_lstm_cell').
../resource/scripts/submit.sh: line 13: 8676 Done echo "$train_test_text"
8677 Killed | STARTER=starter3 DATASET_FILE=italian.npz DATASET_DIR=$ASNLIB python3 2>&1 >> results.txt
2019-04-18 23:26:45.813713: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/47/work/starter3.py:380: BasicLSTMCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is deprecated, please use tf.nn.rnn_cell.LSTMCell, which supports all the feature this cell currently has. Please replace the existing code with tf.nn.rnn_cell.LSTMCell(name='basic_lstm_cell').


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
size_embed 40, state_size 15, dropout_keep_prob None, use_fc False, epoch_return True usc_bn False
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.007745
iteration (0)/(222): train batch loss = 4.304, train batch accuracy = 0.005, train acc
iteration (10)/(222): train batch loss = 4.277, train batch accuracy = 0.012, train acc
iteration (20)/(222): train batch loss = 4.161, train batch accuracy = 0.000, train acc
iteration (30)/(222): train batch loss = 3.959, train batch accuracy = 0.005, train acc
iteration (40)/(222): train batch loss = 3.817, train batch accuracy = 0.020, train acc
iteration (50)/(222): train batch loss = 3.697, train batch accuracy = 0.072, train acc
iteration (60)/(222): train batch loss = 3.657, train batch accuracy = 0.077, train acc
iteration (70)/(222): train batch loss = 3.554, train batch accuracy = 0.123, train acc
iteration (80)/(222): train batch loss = 3.469, train batch accuracy = 0.159, train acc
iteration (90)/(222): train batch loss = 3.448, train batch accuracy = 0.158, train acc
iteration (100)/(222): train batch loss = 3.453, train batch accuracy = 0.165, train acc
iteration (110)/(222): train batch loss = 3.408, train batch accuracy = 0.169, train acc
iteration (120)/(222): train batch loss = 3.370, train batch accuracy = 0.186, train acc
iteration (130)/(222): train batch loss = 3.337, train batch accuracy = 0.157, train acc
iteration (140)/(222): train batch loss = 3.348, train batch accuracy = 0.182, train acc
iteration (150)/(222): train batch loss = 3.319, train batch accuracy = 0.241, train acc
iteration (160)/(222): train batch loss = 3.370, train batch accuracy = 0.304, train acc
iteration (170)/(222): train batch loss = 3.294, train batch accuracy = 0.322, train acc
iteration (180)/(222): train batch loss = 3.292, train batch accuracy = 0.317, train acc
iteration (190)/(222): train batch loss = 3.255, train batch accuracy = 0.295, train acc
iteration (200)/(222): train batch loss = 3.264, train batch accuracy = 0.260, train acc
iteration (210)/(222): train batch loss = 3.261, train batch accuracy = 0.247, train acc
iteration (220)/(222): train batch loss = 3.196, train batch accuracy = 0.246, train acc
Test accuracy for japanese after 1 iterations is 0.284658
iteration (0)/(222): train batch loss = 3.277, train batch accuracy = 0.223, train acc
iteration (10)/(222): train batch loss = 3.179, train batch accuracy = 0.226, train acc
iteration (20)/(222): train batch loss = 3.189, train batch accuracy = 0.216, train acc
iteration (30)/(222): train batch loss = 3.178, train batch accuracy = 0.240, train acc
iteration (40)/(222): train batch loss = 3.162, train batch accuracy = 0.189, train acc
iteration (50)/(222): train batch loss = 3.159, train batch accuracy = 0.222, train acc
iteration (60)/(222): train batch loss = 3.193, train batch accuracy = 0.236, train acc
iteration (70)/(222): train batch loss = 3.158, train batch accuracy = 0.210, train acc
iteration (80)/(222): train batch loss = 3.120, train batch accuracy = 0.215, train acc
iteration (90)/(222): train batch loss = 3.122, train batch accuracy = 0.203, train acc
iteration (100)/(222): train batch loss = 3.136, train batch accuracy = 0.218, train acc
iteration (110)/(222): train batch loss = 3.131, train batch accuracy = 0.221, train acc
iteration (120)/(222): train batch loss = 3.090, train batch accuracy = 0.209, train acc
iteration (130)/(222): train batch loss = 3.085, train batch accuracy = 0.210, train acc
iteration (140)/(222): train batch loss = 3.078, train batch accuracy = 0.213, train acc
iteration (150)/(222): train batch loss = 3.088, train batch accuracy = 0.239, train acc
iteration (160)/(222): train batch loss = 3.111, train batch accuracy = 0.216, train acc
iteration (170)/(222): train batch loss = 3.078, train batch accuracy = 0.218, train acc
iteration (180)/(222): train batch loss = 3.068, train batch accuracy = 0.210, train acc
iteration (190)/(222): train batch loss = 3.055, train batch accuracy = 0.216, train acc
iteration (200)/(222): train batch loss = 3.074, train batch accuracy = 0.221, train acc
iteration (210)/(222): train batch loss = 3.075, train batch accuracy = 0.218, train acc
iteration (220)/(222): train batch loss = 3.011, train batch accuracy = 0.204, train acc
Test accuracy for japanese after 2 iterations is 0.255417
iteration (0)/(222): train batch loss = 3.104, train batch accuracy = 0.188, train acc
iteration (10)/(222): train batch loss = 3.008, train batch accuracy = 0.189, train acc
iteration (20)/(222): train batch loss = 3.019, train batch accuracy = 0.194, train acc
iteration (30)/(222): train batch loss = 3.026, train batch accuracy = 0.214, train acc
iteration (40)/(222): train batch loss = 3.023, train batch accuracy = 0.176, train acc
iteration (50)/(222): train batch loss = 3.020, train batch accuracy = 0.211, train acc
iteration (60)/(222): train batch loss = 3.041, train batch accuracy = 0.203, train acc
iteration (70)/(222): train batch loss = 3.011, train batch accuracy = 0.194, train acc
iteration (80)/(222): train batch loss = 2.989, train batch accuracy = 0.200, train acc
iteration (90)/(222): train batch loss = 2.983, train batch accuracy = 0.187, train acc
iteration (100)/(222): train batch loss = 2.990, train batch accuracy = 0.207, train acc
iteration (110)/(222): train batch loss = 2.982, train batch accuracy = 0.206, train acc
iteration (120)/(222): train batch loss = 2.949, train batch accuracy = 0.198, train acc
iteration (130)/(222): train batch loss = 2.946, train batch accuracy = 0.209, train acc
iteration (140)/(222): train batch loss = 2.934, train batch accuracy = 0.203, train acc
iteration (150)/(222): train batch loss = 2.942, train batch accuracy = 0.236, train acc
iteration (160)/(222): train batch loss = 2.965, train batch accuracy = 0.211, train acc
iteration (170)/(222): train batch loss = 2.939, train batch accuracy = 0.214, train acc
iteration (180)/(222): train batch loss = 2.933, train batch accuracy = 0.212, train acc
iteration (190)/(222): train batch loss = 2.919, train batch accuracy = 0.217, train acc
iteration (200)/(222): train batch loss = 2.938, train batch accuracy = 0.222, train acc
iteration (210)/(222): train batch loss = 2.940, train batch accuracy = 0.219, train acc
iteration (220)/(222): train batch loss = 2.893, train batch accuracy = 0.203, train acc
Final accuracy for japanese is 0.255156
################################################################################################
size_embed 40, state_size 20, dropout_keep_prob 0.9, use_fc True, epoch_return True usc_bn False
[Executed at: Fri Apr 19 0:10:46 PDT 2019]

/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
2019-04-19 00:08:54.800063: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/50/work/starter3.py:322: BasicRNNCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is equivalent as tf.keras.layers.SimpleRNNCell, and will be replaced by that in Tensorflow 2.0.
2019-04-19 00:09:56.563885: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
/usr/local/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
from ._conv import register_converters as _register_converters
WARNING:tensorflow:From /home/ccc_v1_g_d91cf_29112/asn48401_6/asn48402_1/95485/50/work/starter3.py:322: BasicRNNCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is equivalent as tf.keras.layers.SimpleRNNCell, and will be replaced by that in Tensorflow 2.0.


Your Task 1a: ReadFile implementation works well, scoring: 100%


Your Task 1b: BuildMatrices implementation works well, scoring: 100%


Summary:
Task,Score,MaximumScore
Task 1a: ReadFile,20,20
Task 1b: BuildMatrices,10,10
Total,30,30
size_embed 40, state_size 20, dropout_keep_prob 0.9, use_fc True, epoch_return True usc_bn False
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for italian after 0 iterations is 0.030313
iteration (0)/(432): train batch loss = 3.689, train batch accuracy = 0.031, train acc
iteration (10)/(432): train batch loss = 3.687, train batch accuracy = 0.245, train acc
iteration (20)/(432): train batch loss = 3.685, train batch accuracy = 0.149, train acc
iteration (30)/(432): train batch loss = 3.673, train batch accuracy = 0.183, train acc
iteration (40)/(432): train batch loss = 3.656, train batch accuracy = 0.160, train acc
iteration (50)/(432): train batch loss = 3.636, train batch accuracy = 0.164, train acc
iteration (60)/(432): train batch loss = 3.617, train batch accuracy = 0.159, train acc
iteration (70)/(432): train batch loss = 3.601, train batch accuracy = 0.173, train acc
iteration (80)/(432): train batch loss = 3.583, train batch accuracy = 0.180, train acc
iteration (90)/(432): train batch loss = 3.539, train batch accuracy = 0.218, train acc
iteration (100)/(432): train batch loss = 3.568, train batch accuracy = 0.190, train acc
iteration (110)/(432): train batch loss = 3.538, train batch accuracy = 0.207, train acc
iteration (120)/(432): train batch loss = 3.559, train batch accuracy = 0.178, train acc
iteration (130)/(432): train batch loss = 3.510, train batch accuracy = 0.226, train acc
iteration (140)/(432): train batch loss = 3.517, train batch accuracy = 0.218, train acc
iteration (150)/(432): train batch loss = 3.525, train batch accuracy = 0.213, train acc
iteration (160)/(432): train batch loss = 3.498, train batch accuracy = 0.250, train acc
iteration (170)/(432): train batch loss = 3.470, train batch accuracy = 0.265, train acc
iteration (180)/(432): train batch loss = 3.481, train batch accuracy = 0.240, train acc
iteration (190)/(432): train batch loss = 3.495, train batch accuracy = 0.229, train acc
iteration (200)/(432): train batch loss = 3.442, train batch accuracy = 0.360, train acc
iteration (210)/(432): train batch loss = 3.399, train batch accuracy = 0.401, train acc
iteration (220)/(432): train batch loss = 3.378, train batch accuracy = 0.449, train acc
iteration (230)/(432): train batch loss = 3.305, train batch accuracy = 0.526, train acc
iteration (240)/(432): train batch loss = 3.227, train batch accuracy = 0.587, train acc
iteration (250)/(432): train batch loss = 3.399, train batch accuracy = 0.366, train acc
iteration (260)/(432): train batch loss = 3.439, train batch accuracy = 0.306, train acc
iteration (270)/(432): train batch loss = 3.390, train batch accuracy = 0.355, train acc
iteration (280)/(432): train batch loss = 3.355, train batch accuracy = 0.389, train acc
iteration (290)/(432): train batch loss = 3.352, train batch accuracy = 0.393, train acc
iteration (300)/(432): train batch loss = 3.415, train batch accuracy = 0.318, train acc
iteration (310)/(432): train batch loss = 3.280, train batch accuracy = 0.470, train acc
iteration (320)/(432): train batch loss = 3.271, train batch accuracy = 0.482, train acc
iteration (330)/(432): train batch loss = 3.250, train batch accuracy = 0.501, train acc
iteration (340)/(432): train batch loss = 3.291, train batch accuracy = 0.453, train acc
iteration (350)/(432): train batch loss = 3.329, train batch accuracy = 0.409, train acc
iteration (360)/(432): train batch loss = 3.281, train batch accuracy = 0.460, train acc
iteration (370)/(432): train batch loss = 3.239, train batch accuracy = 0.505, train acc
iteration (380)/(432): train batch loss = 3.259, train batch accuracy = 0.482, train acc
iteration (390)/(432): train batch loss = 3.238, train batch accuracy = 0.501, train acc
iteration (400)/(432): train batch loss = 3.278, train batch accuracy = 0.461, train acc
iteration (410)/(432): train batch loss = 3.156, train batch accuracy = 0.591, train acc
iteration (420)/(432): train batch loss = 3.221, train batch accuracy = 0.519, train acc
iteration (430)/(432): train batch loss = 3.183, train batch accuracy = 0.575, train acc
Test accuracy for italian after 1 iterations is 0.498158
iteration (0)/(432): train batch loss = 3.251, train batch accuracy = 0.505, train acc
iteration (10)/(432): train batch loss = 3.278, train batch accuracy = 0.481, train acc
iteration (20)/(432): train batch loss = 3.377, train batch accuracy = 0.371, train acc
iteration (30)/(432): train batch loss = 3.219, train batch accuracy = 0.526, train acc
iteration (40)/(432): train batch loss = 3.299, train batch accuracy = 0.433, train acc
iteration (50)/(432): train batch loss = 3.247, train batch accuracy = 0.491, train acc
iteration (60)/(432): train batch loss = 3.251, train batch accuracy = 0.478, train acc
iteration (70)/(432): train batch loss = 3.204, train batch accuracy = 0.537, train acc
iteration (80)/(432): train batch loss = 3.211, train batch accuracy = 0.524, train acc
iteration (90)/(432): train batch loss = 3.176, train batch accuracy = 0.570, train acc
iteration (100)/(432): train batch loss = 3.286, train batch accuracy = 0.490, train acc
iteration (110)/(432): train batch loss = 3.150, train batch accuracy = 0.618, train acc
iteration (120)/(432): train batch loss = 3.216, train batch accuracy = 0.560, train acc
iteration (130)/(432): train batch loss = 3.112, train batch accuracy = 0.648, train acc
iteration (140)/(432): train batch loss = 3.100, train batch accuracy = 0.659, train acc
iteration (150)/(432): train batch loss = 3.139, train batch accuracy = 0.622, train acc
iteration (160)/(432): train batch loss = 3.041, train batch accuracy = 0.734, train acc
iteration (170)/(432): train batch loss = 2.982, train batch accuracy = 0.788, train acc
iteration (180)/(432): train batch loss = 3.062, train batch accuracy = 0.689, train acc
iteration (190)/(432): train batch loss = 3.106, train batch accuracy = 0.643, train acc
iteration (200)/(432): train batch loss = 3.118, train batch accuracy = 0.633, train acc
iteration (210)/(432): train batch loss = 3.113, train batch accuracy = 0.637, train acc
iteration (220)/(432): train batch loss = 3.105, train batch accuracy = 0.642, train acc
iteration (230)/(432): train batch loss = 3.089, train batch accuracy = 0.656, train acc
iteration (240)/(432): train batch loss = 3.027, train batch accuracy = 0.719, train acc
iteration (250)/(432): train batch loss = 3.156, train batch accuracy = 0.597, train acc
iteration (260)/(432): train batch loss = 3.211, train batch accuracy = 0.530, train acc
iteration (270)/(432): train batch loss = 3.167, train batch accuracy = 0.573, train acc
iteration (280)/(432): train batch loss = 3.130, train batch accuracy = 0.607, train acc
iteration (290)/(432): train batch loss = 3.135, train batch accuracy = 0.601, train acc
iteration (300)/(432): train batch loss = 3.187, train batch accuracy = 0.547, train acc
iteration (310)/(432): train batch loss = 3.082, train batch accuracy = 0.662, train acc
iteration (320)/(432): train batch loss = 3.094, train batch accuracy = 0.648, train acc
iteration (330)/(432): train batch loss = 3.073, train batch accuracy = 0.668, train acc
iteration (340)/(432): train batch loss = 3.095, train batch accuracy = 0.659, train acc
iteration (350)/(432): train batch loss = 3.170, train batch accuracy = 0.570, train acc
iteration (360)/(432): train batch loss = 3.105, train batch accuracy = 0.636, train acc
iteration (370)/(432): train batch loss = 3.050, train batch accuracy = 0.688, train acc
iteration (380)/(432): train batch loss = 3.073, train batch accuracy = 0.671, train acc
iteration (390)/(432): train batch loss = 3.050, train batch accuracy = 0.686, train acc
iteration (400)/(432): train batch loss = 3.077, train batch accuracy = 0.664, train acc
iteration (410)/(432): train batch loss = 2.979, train batch accuracy = 0.773, train acc
iteration (420)/(432): train batch loss = 3.031, train batch accuracy = 0.709, train acc
iteration (430)/(432): train batch loss = 2.995, train batch accuracy = 0.747, train acc
Final accuracy for italian is 0.655585
size_embed 40, state_size 20, dropout_keep_prob 0.9, use_fc True, epoch_return True usc_bn False
tf.losses.get_total_loss Tensor("model/total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses []
tf.losses.get_total_loss Tensor("total_loss:0", shape=(), dtype=float32)
tf.losses.get_losses [, ]
Test accuracy for japanese after 0 iterations is 0.026194
iteration (0)/(222): train batch loss = 3.611, train batch accuracy = 0.021, train acc
iteration (10)/(222): train batch loss = 3.610, train batch accuracy = 0.346, train acc
iteration (20)/(222): train batch loss = 3.607, train batch accuracy = 0.258, train acc
iteration (30)/(222): train batch loss = 3.601, train batch accuracy = 0.269, train acc
iteration (40)/(222): train batch loss = 3.590, train batch accuracy = 0.264, train acc
iteration (50)/(222): train batch loss = 3.572, train batch accuracy = 0.266, train acc
iteration (60)/(222): train batch loss = 3.556, train batch accuracy = 0.272, train acc
iteration (70)/(222): train batch loss = 3.534, train batch accuracy = 0.279, train acc
iteration (80)/(222): train batch loss = 3.508, train batch accuracy = 0.325, train acc
iteration (90)/(222): train batch loss = 3.489, train batch accuracy = 0.357, train acc
iteration (100)/(222): train batch loss = 3.461, train batch accuracy = 0.416, train acc
iteration (110)/(222): train batch loss = 3.412, train batch accuracy = 0.448, train acc
iteration (120)/(222): train batch loss = 3.376, train batch accuracy = 0.451, train acc
iteration (130)/(222): train batch loss = 3.346, train batch accuracy = 0.464, train acc
iteration (140)/(222): train batch loss = 3.317, train batch accuracy = 0.477, train acc
iteration (150)/(222): train batch loss = 3.268, train batch accuracy = 0.506, train acc
iteration (160)/(222): train batch loss = 3.271, train batch accuracy = 0.487, train acc
iteration (170)/(222): train batch loss = 3.214, train batch accuracy = 0.536, train acc
iteration (180)/(222): train batch loss = 3.190, train batch accuracy = 0.556, train acc
iteration (190)/(222): train batch loss = 3.170, train batch accuracy = 0.568, train acc
iteration (200)/(222): train batch loss = 3.192, train batch accuracy = 0.529, train acc
iteration (210)/(222): train batch loss = 3.162, train batch accuracy = 0.552, train acc
iteration (220)/(222): train batch loss = 3.124, train batch accuracy = 0.576, train acc
Test accuracy for japanese after 1 iterations is 0.603342
iteration (0)/(222): train batch loss = 3.183, train batch accuracy = 0.520, train acc
iteration (10)/(222): train batch loss = 3.142, train batch accuracy = 0.560, train acc
iteration (20)/(222): train batch loss = 3.145, train batch accuracy = 0.548, train acc
iteration (30)/(222): train batch loss = 3.124, train batch accuracy = 0.580, train acc
iteration (40)/(222): train batch loss = 3.119, train batch accuracy = 0.566, train acc
iteration (50)/(222): train batch loss = 3.123, train batch accuracy = 0.562, train acc
iteration (60)/(222): train batch loss = 3.140, train batch accuracy = 0.554, train acc
iteration (70)/(222): train batch loss = 3.106, train batch accuracy = 0.574, train acc
iteration (80)/(222): train batch loss = 3.113, train batch accuracy = 0.565, train acc
iteration (90)/(222): train batch loss = 3.111, train batch accuracy = 0.568, train acc
iteration (100)/(222): train batch loss = 3.119, train batch accuracy = 0.564, train acc
iteration (110)/(222): train batch loss = 3.101, train batch accuracy = 0.589, train acc
iteration (120)/(222): train batch loss = 3.089, train batch accuracy = 0.594, train acc
iteration (130)/(222): train batch loss = 3.081, train batch accuracy = 0.594, train acc
iteration (140)/(222): train batch loss = 3.067, train batch accuracy = 0.619, train acc
iteration (150)/(222): train batch loss = 3.032, train batch accuracy = 0.663, train acc
iteration (160)/(222): train batch loss = 3.067, train batch accuracy = 0.628, train acc
iteration (170)/(222): train batch loss = 3.018, train batch accuracy = 0.674, train acc
iteration (180)/(222): train batch loss = 3.002, train batch accuracy = 0.684, train acc
iteration (190)/(222): train batch loss = 2.993, train batch accuracy = 0.694, train acc
iteration (200)/(222): train batch loss = 3.019, train batch accuracy = 0.666, train acc
iteration (210)/(222): train batch loss = 3.002, train batch accuracy = 0.686, train acc
iteration (220)/(222): train batch loss = 2.961, train batch accuracy = 0.722, train acc
Test accuracy for japanese after 2 iterations is 0.744583
iteration (0)/(222): train batch loss = 3.042, train batch accuracy = 0.641, train acc
iteration (10)/(222): train batch loss = 2.993, train batch accuracy = 0.695, train acc
iteration (20)/(222): train batch loss = 2.986, train batch accuracy = 0.707, train acc
iteration (30)/(222): train batch loss = 2.941, train batch accuracy = 0.743, train acc
iteration (40)/(222): train batch loss = 2.959, train batch accuracy = 0.719, train acc
iteration (50)/(222): train batch loss = 2.943, train batch accuracy = 0.739, train acc
iteration (60)/(222): train batch loss = 2.957, train batch accuracy = 0.716, train acc
iteration (70)/(222): train batch loss = 2.946, train batch accuracy = 0.729, train acc
iteration (80)/(222): train batch loss = 2.961, train batch accuracy = 0.715, train acc
iteration (90)/(222): train batch loss = 2.947, train batch accuracy = 0.728, train acc
iteration (100)/(222): train batch loss = 2.978, train batch accuracy = 0.695, train acc
iteration (110)/(222): train batch loss = 2.946, train batch accuracy = 0.731, train acc
iteration (120)/(222): train batch loss = 2.933, train batch accuracy = 0.742, train acc
iteration (130)/(222): train batch loss = 2.948, train batch accuracy = 0.722, train acc
iteration (140)/(222): train batch loss = 2.938, train batch accuracy = 0.728, train acc
iteration (150)/(222): train batch loss = 2.924, train batch accuracy = 0.749, train acc
iteration (160)/(222): train batch loss = 2.978, train batch accuracy = 0.689, train acc
iteration (170)/(222): train batch loss = 2.915, train batch accuracy = 0.760, train acc
iteration (180)/(222): train batch loss = 2.925, train batch accuracy = 0.742, train acc
iteration (190)/(222): train batch loss = 2.916, train batch accuracy = 0.752, train acc
iteration (200)/(222): train batch loss = 2.949, train batch accuracy = 0.719, train acc
iteration (210)/(222): train batch loss = 2.934, train batch accuracy = 0.732, train acc
iteration (220)/(222): train batch loss = 2.905, train batch accuracy = 0.759, train acc
Test accuracy for japanese after 3 iterations is 0.776608
iteration (0)/(222): train batch loss = 2.973, train batch accuracy = 0.693, train acc
iteration (10)/(222): train batch loss = 2.936, train batch accuracy = 0.729, train acc
iteration (20)/(222): train batch loss = 2.928, train batch accuracy = 0.739, train acc
iteration (30)/(222): train batch loss = 2.902, train batch accuracy = 0.768, train acc
iteration (40)/(222): train batch loss = 2.923, train batch accuracy = 0.741, train acc
iteration (50)/(222): train batch loss = 2.914, train batch accuracy = 0.747, train acc
iteration (60)/(222): train batch loss = 2.911, train batch accuracy = 0.753, train acc
iteration (70)/(222): train batch loss = 2.925, train batch accuracy = 0.737, train acc
iteration (80)/(222): train batch loss = 2.930, train batch accuracy = 0.736, train acc
iteration (90)/(222): train batch loss = 2.922, train batch accuracy = 0.740, train acc
iteration (100)/(222): train batch loss = 2.949, train batch accuracy = 0.713, train acc
iteration (110)/(222): train batch loss = 2.921, train batch accuracy = 0.741, train acc
iteration (120)/(222): train batch loss = 2.910, train batch accuracy = 0.752, train acc
iteration (130)/(222): train batch loss = 2.923, train batch accuracy = 0.742, train acc
iteration (140)/(222): train batch loss = 2.918, train batch accuracy = 0.742, train acc
iteration (150)/(222): train batch loss = 2.903, train batch accuracy = 0.760, train acc
iteration (160)/(222): train batch loss = 2.964, train batch accuracy = 0.700, train acc
iteration (170)/(222): train batch loss = 2.895, train batch accuracy = 0.770, train acc
iteration (180)/(222): train batch loss = 2.910, train batch accuracy = 0.755, train acc
iteration (190)/(222): train batch loss = 2.899, train batch accuracy = 0.762, train acc
iteration (200)/(222): train batch loss = 2.938, train batch accuracy = 0.724, train acc
iteration (210)/(222): train batch loss = 2.921, train batch accuracy = 0.741, train acc
iteration (220)/(222): train batch loss = 2.893, train batch accuracy = 0.771, train acc
Test accuracy for japanese after 4 iterations is 0.784962
iteration (0)/(222): train batch loss = 2.958, train batch accuracy = 0.705, train acc
iteration (10)/(222): train batch loss = 2.919, train batch accuracy = 0.746, train acc
iteration (20)/(222): train batch loss = 2.907, train batch accuracy = 0.758, train acc
iteration (30)/(222): train batch loss = 2.881, train batch accuracy = 0.784, train acc
iteration (40)/(222): train batch loss = 2.908, train batch accuracy = 0.755, train acc
iteration (50)/(222): train batch loss = 2.897, train batch accuracy = 0.767, train acc
iteration (60)/(222): train batch loss = 2.894, train batch accuracy = 0.772, train acc
iteration (70)/(222): train batch loss = 2.907, train batch accuracy = 0.755, train acc
iteration (80)/(222): train batch loss = 2.911, train batch accuracy = 0.749, train acc
iteration (90)/(222): train batch loss = 2.904, train batch accuracy = 0.756, train acc
iteration (100)/(222): train batch loss = 2.930, train batch accuracy = 0.733, train acc
iteration (110)/(222): train batch loss = 2.905, train batch accuracy = 0.754, train acc
iteration (120)/(222): train batch loss = 2.895, train batch accuracy = 0.766, train acc
iteration (130)/(222): train batch loss = 2.907, train batch accuracy = 0.755, train acc
iteration (140)/(222): train batch loss = 2.891, train batch accuracy = 0.770, train acc
iteration (150)/(222): train batch loss = 2.886, train batch accuracy = 0.774, train acc
iteration (160)/(222): train batch loss = 2.936, train batch accuracy = 0.723, train acc
iteration (170)/(222): train batch loss = 2.881, train batch accuracy = 0.778, train acc
iteration (180)/(222): train batch loss = 2.882, train batch accuracy = 0.777, train acc
iteration (190)/(222): train batch loss = 2.882, train batch accuracy = 0.780, train acc
iteration (200)/(222): train batch loss = 2.924, train batch accuracy = 0.734, train acc
iteration (210)/(222): train batch loss = 2.905, train batch accuracy = 0.757, train acc
iteration (220)/(222): train batch loss = 2.876, train batch accuracy = 0.782, train acc
Test accuracy for japanese after 5 iterations is 0.795666
iteration (0)/(222): train batch loss = 2.939, train batch accuracy = 0.720, train acc
iteration (10)/(222): train batch loss = 2.893, train batch accuracy = 0.766, train acc
iteration (20)/(222): train batch loss = 2.885, train batch accuracy = 0.775, train acc
iteration (30)/(222): train batch loss = 2.874, train batch accuracy = 0.786, train acc
iteration (40)/(222): train batch loss = 2.894, train batch accuracy = 0.764, train acc
iteration (50)/(222): train batch loss = 2.886, train batch accuracy = 0.772, train acc
iteration (60)/(222): train batch loss = 2.873, train batch accuracy = 0.785, train acc
iteration (70)/(222): train batch loss = 2.895, train batch accuracy = 0.769, train acc
iteration (80)/(222): train batch loss = 2.903, train batch accuracy = 0.756, train acc
iteration (90)/(222): train batch loss = 2.888, train batch accuracy = 0.775, train acc
iteration (100)/(222): train batch loss = 2.917, train batch accuracy = 0.744, train acc
iteration (110)/(222): train batch loss = 2.895, train batch accuracy = 0.769, train acc
iteration (120)/(222): train batch loss = 2.887, train batch accuracy = 0.775, train acc
iteration (130)/(222): train batch loss = 2.894, train batch accuracy = 0.768, train acc
iteration (140)/(222): train batch loss = 2.866, train batch accuracy = 0.798, train acc
iteration (150)/(222): train batch loss = 2.865, train batch accuracy = 0.798, train acc
iteration (160)/(222): train batch loss = 2.900, train batch accuracy = 0.762, train acc
iteration (170)/(222): train batch loss = 2.867, train batch accuracy = 0.792, train acc
iteration (180)/(222): train batch loss = 2.850, train batch accuracy = 0.816, train acc
iteration (190)/(222): train batch loss = 2.857, train batch accuracy = 0.806, train acc
iteration (200)/(222): train batch loss = 2.899, train batch accuracy = 0.763, train acc
iteration (210)/(222): train batch loss = 2.875, train batch accuracy = 0.795, train acc
iteration (220)/(222): train batch loss = 2.850, train batch accuracy = 0.817, train acc
Test accuracy for japanese after 6 iterations is 0.817944
iteration (0)/(222): train batch loss = 2.913, train batch accuracy = 0.752, train acc
iteration (10)/(222): train batch loss = 2.851, train batch accuracy = 0.824, train acc
iteration (20)/(222): train batch loss = 2.842, train batch accuracy = 0.830, train acc
iteration (30)/(222): train batch loss = 2.849, train batch accuracy = 0.820, train acc
iteration (40)/(222): train batch loss = 2.866, train batch accuracy = 0.807, train acc
iteration (50)/(222): train batch loss = 2.861, train batch accuracy = 0.805, train acc
iteration (60)/(222): train batch loss = 2.832, train batch accuracy = 0.835, train acc
iteration (70)/(222): train batch loss = 2.855, train batch accuracy = 0.816, train acc
iteration (80)/(222): train batch loss = 2.870, train batch accuracy = 0.803, train acc
iteration (90)/(222): train batch loss = 2.838, train batch accuracy = 0.834, train acc
iteration (100)/(222): train batch loss = 2.870, train batch accuracy = 0.802, train acc
iteration (110)/(222): train batch loss = 2.861, train batch accuracy = 0.810, train acc
iteration (120)/(222): train batch loss = 2.857, train batch accuracy = 0.811, train acc
iteration (130)/(222): train batch loss = 2.856, train batch accuracy = 0.814, train acc
iteration (140)/(222): train batch loss = 2.820, train batch accuracy = 0.852, train acc
iteration (150)/(222): train batch loss = 2.837, train batch accuracy = 0.831, train acc
iteration (160)/(222): train batch loss = 2.853, train batch accuracy = 0.817, train acc
iteration (170)/(222): train batch loss = 2.842, train batch accuracy = 0.827, train acc
iteration (180)/(222): train batch loss = 2.811, train batch accuracy = 0.855, train acc
iteration (190)/(222): train batch loss = 2.821, train batch accuracy = 0.846, train acc
iteration (200)/(222): train batch loss = 2.874, train batch accuracy = 0.790, train acc
iteration (210)/(222): train batch loss = 2.836, train batch accuracy = 0.834, train acc
iteration (220)/(222): train batch loss = 2.808, train batch accuracy = 0.858, train acc
Final accuracy for japanese is 0.839962
